import json
from typing import Any

from langchain_community.chains.graph_qa.cypher import GraphCypherQAChain
from langchain_core.tools import Tool


class Descriptions:
    general = "Used for general discussion"
    graph_db = """
    Useful for questions about university, tutors, studies, or anything related to the university,
    this tool is a helper along the data you already know and trained on. You can use it to ensure that the result
    given to the user is correct. 
    """
    user_info = """
    Used when the user asks about himself/herself, like who am I or what is my current GPA or academic 
    performance (if the user is student) etc Note: That tutors might also might ask you questions about themselves or 
    their students, in this case this function is also useful. The input should be empty"""

    validate_url = """Must be used when you provide a url to the user within the response or if the user asks for a 
    certain url. Only use it to validate the url if it is actually works and if the web page is valid, a good result 
    from the function will return 200 http status code to validate that the url provided to the user works, 
    other http codes are considered invalid. For example if the  prompt is 'Can you provide the registration website 
    or webpage' the input should be 'www.somesite.com/registration?page.html' as the input or the website is 
    generated by you then passed to the function to get validated and finally passed to the user"""


class Functions:
    @staticmethod
    def validate_url(url):
        import requests
        response = requests.request(url=url, method="GET")
        return response.status_code

    @staticmethod
    def get_current_user_info(_: Any):
        ## will be replaced later by an API call
        with open("../../data/user_info/user_info_sample.json", 'r', encoding='utf-8') as f:
            data = json.load(f)
            return data


class Prompts:
    cypher_generation_template = """
    You are an expert Neo4j Developer translating user questions into Cypher to answer 
questions about Arab Open University and provide information. Convert the user's question based on the schema.
    
    
    Instructions: 
    - Use only the provided relationship types and properties in the schema.
    
    - Do not use any other relationship types or properties that are not provided.
    
    - Always return the full context as the result of the cypher chain query not just some fields
    
    - Always use 'OR' instead of 'AND', never use 'AND' in queries
    
    - The user might provide extra names or titles beside the intended element for instance, 
    'What is module BS323' Do not create a query like the following:
    MATCH (n: Module) WHERE lower(n.code) contains lower('module BS323') return n
    you should get only the module code and passed to the query, same with other queries.
    
    - The user might mention the name of the node within the input which might make it easier
    
    for you to look for but if nothing is mentioned that can match the schema and if for instance
    the input was generic like 'Who is Ahmed?' then you should run the following example:
    MATCH (n) where n.name contains 'Ahmed' or m.description or m.biography return n
    As if you were searching the whole nodes and comparing all properties to find a match
    
    - Always use 'contains' and not '=' as the user might not enter the full name nor the correct name. Also
    lower the user input and the column value when comparing for instance if the input 'what is m110 module'
    then the query should be:
    MATCH (n: Module) WHERE lower(n.code) contains lower(m110) return n
    
    
    Schema:
    {schema}
    Question:
    provide all information about the following question, {question}
    """
    qa_generation_template = """
    You are an assistant that takes the results
    from a Neo4j Cypher query and forms a human-readable response. The
    query results section contains the results of a Cypher query that was
    generated based on a user's natural language question. The provided
    information is authoritative, you must never doubt it or try to use
    your internal knowledge to correct it. Make the answer sound like a
    response to the question.
    
    Query Results:
    {context}
    
    Question:
    {question}
    
    If the provided information is empty, then you can fall back to use your internal knowledge
    
    If the information is not empty, you must provide an answer using the results. and support it with your internal 
    knowledge if both (the answers or query result result and your internal knowledge) are not conflicting. If they 
    are conflicting then, reason about both answers to the user and stay bias and simply say you don't know for sure 
    yet.
    
    Never say you don't have the right information if there is data in
    the query results. Always use the data in the query results.
    
    Helpful Answer:
    """

